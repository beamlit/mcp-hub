categories:
- Database
- MCP
- PostgreSQL
description: Full-access PostgreSQL server for Model Context Protocol with read/write
  capabilities.
displayName: PostgreSQL Advanced MCP Server
icon: https://img.shields.io/badge/MCP-Compatible-blue.svg
longDescription: The PostgreSQL Advanced MCP Server provides a robust solution for
  integrating PostgreSQL databases with the Model Context Protocol, enabling full
  read and write access along with enhanced schema metadata management. This module
  is designed to facilitate seamless interactions between applications and PostgreSQL
  databases, ensuring efficient data handling and retrieval.
name: mcp-postgres-full-access
siteUrl: https://github.com/syahiidkamil/mcp-postgres-full-access
version: 1.0.0
source:
  branch: main
  path: .
  repo: https://github.com/syahiidkamil/mcp-postgres-full-access
build:
  command: npm run build
  language: typescript
  output: dist
  path: .
run:
  config:
    databaseUrl:
      arg: --database-url
      default: none
      enum: null
      env: DATABASE_URL
      example: postgresql://username:password@localhost:5432/database
      hidden: null
      label: Database URL
      max: null
      min: null
      pattern: null
      required: true
      secret: true
      type: string
    maxConcurrentTransactions:
      arg: --max-concurrent-transactions
      default: '10'
      enum: null
      env: MAX_CONCURRENT_TRANSACTIONS
      example: 5
      hidden: null
      label: Max Concurrent Transactions
      max: null
      min: null
      pattern: null
      required: false
      secret: null
      type: number
    monitorIntervalMs:
      arg: --monitor-interval
      default: '5000'
      enum: null
      env: MONITOR_INTERVAL_MS
      example: 5000
      hidden: null
      label: Monitor Interval (ms)
      max: null
      min: null
      pattern: null
      required: false
      secret: null
      type: number
    pgMaxConnections:
      arg: --pg-max-connections
      default: '20'
      enum: null
      env: PG_MAX_CONNECTIONS
      example: 20
      hidden: null
      label: Max PostgreSQL Connections
      max: null
      min: null
      pattern: null
      required: false
      secret: null
      type: number
    pgStatementTimeoutMs:
      arg: --pg-statement-timeout
      default: '30000'
      enum: null
      env: PG_STATEMENT_TIMEOUT_MS
      example: 30000
      hidden: null
      label: SQL Statement Timeout (ms)
      max: null
      min: null
      pattern: null
      required: false
      secret: null
      type: number
    transactionTimeoutMs:
      arg: --transaction-timeout
      default: '15000'
      enum: null
      env: TRANSACTION_TIMEOUT_MS
      example: 60000
      hidden: null
      label: Transaction Timeout (ms)
      max: null
      min: null
      pattern: null
      required: false
      secret: null
      type: number
  entrypoint:
  - node
  - ./dist/index.js
  env: {}
