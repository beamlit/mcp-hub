categories:
- Cryptocurrency
- Integration
- Server
description: High-performance CCXT MCP server for cryptocurrency exchange integration.
displayName: CCXT MCP Server
icon: https://img.logo.dev/ccxt
longDescription: The CCXT MCP Server is designed to facilitate seamless integration
  with various cryptocurrency exchanges using the CCXT library. It provides a robust
  and efficient solution for developers looking to build applications that require
  real-time data and trading capabilities across multiple exchanges.
name: ccxt-mcp-server
siteUrl: https://github.com/doggybee/mcp-server-ccxt
version: 1.2.2
source:
  branch: main
  path: .
  repo: https://github.com/doggybee/mcp-server-ccxt
build:
  command: npm run build
  language: typescript
  output: build
  path: .
run:
  config:
    binanceApiKey:
      arg: null
      default: none
      enum: null
      env: BINANCE_API_KEY
      example: your_api_key
      hidden: null
      label: Binance API Key
      max: null
      min: null
      pattern: null
      required: false
      secret: true
      type: string
    binanceSecret:
      arg: null
      default: none
      enum: null
      env: BINANCE_SECRET
      example: your_api_secret
      hidden: null
      label: Binance Secret
      max: null
      min: null
      pattern: null
      required: false
      secret: true
      type: string
    defaultExchange:
      arg: null
      default: binance
      enum: null
      env: DEFAULT_EXCHANGE
      example: binance
      hidden: null
      label: Default Exchange
      max: null
      min: null
      pattern: null
      required: false
      secret: null
      type: string
    defaultMarketType:
      arg: null
      default: spot
      enum: null
      env: DEFAULT_MARKET_TYPE
      example: spot
      hidden: null
      label: Default Market Type
      max: null
      min: null
      pattern: null
      required: false
      secret: null
      type: string
    proxyUrl:
      arg: null
      default: http://your-proxy-server:port
      enum: null
      env: PROXY_URL
      example: http://username:password@your-proxy-server:port
      hidden: null
      label: Proxy URL
      max: null
      min: null
      pattern: null
      required: false
      secret: null
      type: string
    useProxy:
      arg: null
      default: 'false'
      enum: null
      env: USE_PROXY
      example: false
      hidden: null
      label: Use Proxy
      max: null
      min: null
      pattern: null
      required: false
      secret: null
      type: boolean
  entrypoint:
  - node
  - ./build/index.js
  env: {}
tools:
- name: cache-stats
  description: Get CCXT cache statistics
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties: {}
    type: object
  outputSchema: null
- name: clear-cache
  description: Clear CCXT cache
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties: {}
    type: object
  outputSchema: null
- name: set-log-level
  description: Set logging level
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties:
      level:
        description: Logging level to set
        enum:
        - debug
        - info
        - warning
        - error
        type: string
    required:
    - level
    type: object
  outputSchema: null
- name: list-exchanges
  description: List all available cryptocurrency exchanges
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties: {}
    type: object
  outputSchema: null
- name: get-ticker
  description: Get current ticker information for a trading pair
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties:
      exchange:
        description: Exchange ID (e.g., binance, coinbase)
        type: string
      marketType:
        description: 'Market type (default: spot)'
        enum:
        - spot
        - future
        - swap
        - option
        - margin
        type: string
      symbol:
        description: Trading pair symbol (e.g., BTC/USDT)
        type: string
    required:
    - exchange
    - symbol
    type: object
  outputSchema: null
- name: batch-get-tickers
  description: Get ticker information for multiple trading pairs at once
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties:
      exchange:
        description: Exchange ID (e.g., binance, coinbase)
        type: string
      marketType:
        description: 'Market type (default: spot)'
        enum:
        - spot
        - future
        - swap
        - option
        - margin
        type: string
      symbols:
        description: List of trading pair symbols (e.g., ['BTC/USDT', 'ETH/USDT'])
        items:
          type: string
        type: array
    required:
    - exchange
    - symbols
    type: object
  outputSchema: null
- name: get-orderbook
  description: Get market order book for a trading pair
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties:
      exchange:
        description: Exchange ID (e.g., binance, coinbase)
        type: string
      limit:
        default: 20
        description: Depth of the orderbook
        type: number
      symbol:
        description: Trading pair symbol (e.g., BTC/USDT)
        type: string
    required:
    - exchange
    - symbol
    type: object
  outputSchema: null
- name: get-ohlcv
  description: Get OHLCV candlestick data for a trading pair
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties:
      exchange:
        description: Exchange ID (e.g., binance, coinbase)
        type: string
      limit:
        default: 100
        description: Number of candles to fetch (max 1000)
        type: number
      symbol:
        description: Trading pair symbol (e.g., BTC/USDT)
        type: string
      timeframe:
        default: 1d
        description: Timeframe (e.g., 1m, 5m, 1h, 1d)
        type: string
    required:
    - exchange
    - symbol
    type: object
  outputSchema: null
- name: get-trades
  description: Get recent trades for a trading pair
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties:
      exchange:
        description: Exchange ID (e.g., binance, coinbase)
        type: string
      limit:
        default: 50
        description: Number of trades to fetch
        type: number
      symbol:
        description: Trading pair symbol (e.g., BTC/USDT)
        type: string
    required:
    - exchange
    - symbol
    type: object
  outputSchema: null
- name: get-markets
  description: Get all available markets for an exchange
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties:
      exchange:
        description: Exchange ID (e.g., binance, coinbase)
        type: string
      page:
        default: 1
        description: Page number
        type: number
      pageSize:
        default: 100
        description: Items per page
        type: number
    required:
    - exchange
    type: object
  outputSchema: null
- name: get-exchange-info
  description: Get exchange information and status
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties:
      exchange:
        description: Exchange ID (e.g., binance, coinbase)
        type: string
      marketType:
        description: 'Market type (default: spot)'
        enum:
        - spot
        - future
        - swap
        - option
        - margin
        type: string
    required:
    - exchange
    type: object
  outputSchema: null
- name: get-leverage-tiers
  description: Get futures leverage tiers for trading pairs
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties:
      exchange:
        description: Exchange ID (e.g., binance, bybit)
        type: string
      marketType:
        default: future
        description: 'Market type (default: future)'
        enum:
        - future
        - swap
        type: string
      symbol:
        description: Trading pair symbol (optional, e.g., BTC/USDT)
        type: string
    required:
    - exchange
    type: object
  outputSchema: null
- name: get-funding-rates
  description: Get current funding rates for perpetual contracts
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties:
      exchange:
        description: Exchange ID (e.g., binance, bybit)
        type: string
      marketType:
        default: swap
        description: 'Market type (default: swap)'
        enum:
        - future
        - swap
        type: string
      symbols:
        description: List of trading pair symbols (optional)
        items:
          type: string
        type: array
    required:
    - exchange
    type: object
  outputSchema: null
- name: get-market-types
  description: Get market types supported by an exchange
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties:
      exchange:
        description: Exchange ID (e.g., binance, coinbase)
        type: string
    required:
    - exchange
    type: object
  outputSchema: null
- name: account-balance
  description: Get your account balance from a crypto exchange
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties:
      apiKey:
        description: API key for authentication
        type: string
      exchange:
        description: Exchange ID (e.g., binance, coinbase)
        type: string
      marketType:
        description: 'Market type (default: spot)'
        enum:
        - spot
        - future
        - swap
        - option
        - margin
        type: string
      secret:
        description: API secret for authentication
        type: string
    required:
    - exchange
    - apiKey
    - secret
    type: object
  outputSchema: null
- name: place-market-order
  description: Place a market order on an exchange
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties:
      amount:
        description: Amount to buy/sell
        exclusiveMinimum: 0
        type: number
      apiKey:
        description: API key for authentication
        type: string
      exchange:
        description: Exchange ID (e.g., binance, coinbase)
        type: string
      marketType:
        description: 'Market type (default: spot)'
        enum:
        - spot
        - future
        - swap
        - option
        - margin
        type: string
      secret:
        description: API secret for authentication
        type: string
      side:
        description: 'Order side: buy or sell'
        enum:
        - buy
        - sell
        type: string
      symbol:
        description: Trading pair symbol (e.g., BTC/USDT)
        type: string
    required:
    - exchange
    - symbol
    - side
    - amount
    - apiKey
    - secret
    type: object
  outputSchema: null
- name: set-leverage
  description: Set leverage for futures trading
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties:
      apiKey:
        description: API key for authentication
        type: string
      exchange:
        description: Exchange ID (e.g., binance, bybit)
        type: string
      leverage:
        description: Leverage value
        exclusiveMinimum: 0
        type: number
      marketType:
        default: future
        description: 'Market type (default: future)'
        enum:
        - future
        - swap
        type: string
      secret:
        description: API secret for authentication
        type: string
      symbol:
        description: Trading pair symbol (e.g., BTC/USDT)
        type: string
    required:
    - exchange
    - symbol
    - leverage
    - apiKey
    - secret
    type: object
  outputSchema: null
- name: set-margin-mode
  description: Set margin mode for futures trading
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties:
      apiKey:
        description: API key for authentication
        type: string
      exchange:
        description: Exchange ID (e.g., binance, bybit)
        type: string
      marginMode:
        description: 'Margin mode: cross or isolated'
        enum:
        - cross
        - isolated
        type: string
      marketType:
        default: future
        description: 'Market type (default: future)'
        enum:
        - future
        - swap
        type: string
      secret:
        description: API secret for authentication
        type: string
      symbol:
        description: Trading pair symbol (e.g., BTC/USDT)
        type: string
    required:
    - exchange
    - symbol
    - marginMode
    - apiKey
    - secret
    type: object
  outputSchema: null
- name: place-futures-market-order
  description: Place a futures market order
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties:
      amount:
        description: Amount to buy/sell
        exclusiveMinimum: 0
        type: number
      apiKey:
        description: API key for authentication
        type: string
      exchange:
        description: Exchange ID (e.g., binance, bybit)
        type: string
      marketType:
        default: future
        description: 'Market type (default: future)'
        enum:
        - future
        - swap
        type: string
      params:
        additionalProperties: {}
        description: Additional order parameters
        type: object
      secret:
        description: API secret for authentication
        type: string
      side:
        description: 'Order side: buy or sell'
        enum:
        - buy
        - sell
        type: string
      symbol:
        description: Trading pair symbol (e.g., BTC/USDT)
        type: string
    required:
    - exchange
    - symbol
    - side
    - amount
    - apiKey
    - secret
    type: object
  outputSchema: null
- name: get-proxy-config
  description: Get the current proxy configuration
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties: {}
    type: object
  outputSchema: null
- name: set-proxy-config
  description: Configure proxy settings for all exchanges
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties:
      clearCache:
        default: true
        description: Clear exchange cache to apply changes immediately
        type: boolean
      enabled:
        description: Enable or disable proxy
        type: boolean
      password:
        description: Proxy password (optional)
        type: string
      url:
        description: Proxy URL (e.g., http://proxy-server:port)
        type: string
      username:
        description: Proxy username (optional)
        type: string
    required:
    - enabled
    - url
    type: object
  outputSchema: null
- name: test-proxy-connection
  description: Test the proxy connection with a specified exchange
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties:
      exchange:
        description: Exchange ID to test connection with (e.g., binance)
        type: string
    required:
    - exchange
    type: object
  outputSchema: null
- name: clear-exchange-cache
  description: Clear exchange instance cache to apply configuration changes
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties: {}
    type: object
  outputSchema: null
- name: set-market-type
  description: Set default market type for all exchanges
  inputSchema:
    $schema: http://json-schema.org/draft-07/schema#
    additionalProperties: false
    properties:
      clearCache:
        default: true
        description: Clear exchange cache to apply changes immediately
        type: boolean
      marketType:
        description: Market type to set
        enum:
        - spot
        - future
        - swap
        - option
        - margin
        type: string
    required:
    - marketType
    type: object
  outputSchema: null
